# Default values for kubernetes.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}


tags:
  system-monitor: true


kube-prometheus-stack:
  enabled: false
  namespaceOverride: sys-monitor
  alertmanager:
    enabled: false
  grafana:
    namespaceOverride: sys-monitor
    adminPassword: password
    ingress:
      enabled: false
      annotations:
        kubernetes.io/ingress.class: nginx
      hosts: ['grafana.example.com']
      path: "/"
      ingressClassName: nginx
    additionalDataSources:
    - name: Loki
      type: loki
      basicAuth: false
      isDefault: false
      # access: proxy
      url: http://{{ .Release.Name }}-loki:3100
      version: 1
      jsonData:
        derivedFields:
          - datasourceUid: tempo
            # matcherRegex: \[.+,(.+?),
            matcherRegex: \[[a-zA-z0-9-]+,([a-zA-Z0-9]+),
            name: traceId
            url: $${__value.raw}
    - name: Tempo
      type: tempo
      editable: false
      apiVersion: 1
      uid: tempo
      basicAuth: false
      isDefault: false
      # access: proxy
      url: http://{{ .Release.Name }}-tempo:3100
      version: 1
  prometheus:
    ingress:
      enabled: false
  prometheus-node-exporter:
    namespaceOverride: sys-monitor
  kube-state-metrics:
    namespaceOverride: sys-monitor



loki-stack:
  enabled: false
  loki:
    ## - create a pv which above 10Gi and has same namespace with loki
    ## - keep storageClassName same with below setting
    persistence:
      enabled: true
      storageClassName: loki-sc
    securityContext:
      fsGroup: 11111
      runAsGroup: 11111
      runAsNonRoot: true
      runAsUser: 11111
  promtail:
    enabled: true
    config:
      clients:
        - url: http://{{ .Release.Name }}-loki:3100/loki/api/v1/push
  grafana:
    enabled: false
    sidecar:
      datasources:
        enabled: true



tempo:
  enabled: true
  persistence:
    enabled: true
    storageClassName: tempo-sc
  securityContext:
    fsGroup: 11111
    runAsGroup: 11111
    runAsNonRoot: true
    runAsUser: 11111
