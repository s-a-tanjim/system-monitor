version: "3"
name: monitor

networks:
  monitor:
    driver: bridge

services:
  demo-app:
    build:
      context: ./demo-app/
    image: demo-app
    container_name: demo-app
    ports:
      - 4000:4000
    networks:
      - monitor
    volumes:
      - ./demo-app/:/app/

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    networks:
      - monitor
    restart: unless-stopped
    command: -config.file=/mnt/config/loki-config.yml
    volumes:
      - ./loki/loki-config.yml:/mnt/config/loki-config.yml


  promtail:
    image: grafana/promtail:latest
    restart: unless-stopped
    networks:
      - monitor
    command: -config.file=/mnt/config/promtail-config.yml
    depends_on:
      - loki
    volumes:
      - /var/log:/var/log:ro
      - ./promtail/promtail-config.yml:/mnt/config/promtail-config.yml

  # tempo:
  #   image: grafana/tempo:latest
  #   container_name: tempo
  #   ports:
  #     - "3200:3200"
  #     - "14250:14250"
  #   volumes:
  #     - ./tempo/config/tempo-local.yaml:/etc/tempo-local.yaml
  #     - tempo-data:/tmp/tempo
  #   command: -config.file=/etc/tempo-local.yaml
  #   networks:
  #     - monitor

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    user: root
    ports:
      - "3000:3000"
    networks:
      - monitor
    restart: unless-stopped
    volumes:
      - ./data/grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/mnt/config/grafana/dashboards
    environment:
      GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: "/mnt/config/grafana/dashboards/node-exporter-full_1860_rev31.json"
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: password


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    user: root
    command:
      - --config.file=/etc/prometheus-config.yml
      - '--storage.tsdb.path=/prometheus'
      # - --web.enable-remote-write-receiver
      # - --enable-feature=exemplar-storage
      # - '--web.console.libraries=/etc/prometheus/console_libraries'
      # - '--web.console.templates=/etc/prometheus/consoles'
      # - '--storage.tsdb.retention.time=200h'
      # - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - monitor
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus-config.yml:/etc/prometheus-config.yml
      - ./data/prometheus-data/:/prometheus


  # For collecting system info (Prometheus Exporter)
  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    networks:
      - monitor
    ports:
      - "9100:9100"
    # expose:
    #   - 9100
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'


  # For docker monitor (Prometheus Exporter)
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: cadvisor
    ports:
      - 8080:8080
    networks:
      - monitor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    privileged: true
    restart: unless-stopped
